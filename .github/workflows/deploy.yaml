name: Build, Test, Lint and Deploy to GitHub Packages

on:
  push:
    tags:
      - 'v*'

permissions:
  packages: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 0. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Setup Node.js
      - name: Setup Node Enviroment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      # 2. Set Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci  

      # 3. Run Lint
      - name: Run Lint
        run: npm run lint

      # 4. Run Tests
      - name: Run Tests
        run: npm run test:ci

      # 5. Run Tests
      - name: Run Tests
        run: npm run test:coverage

      # 6. Upload Report Tests
      - name: Upload Report Tests
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

      # 7. Login to GitHub Container Registry
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN  }}

      # 8. Get the tag and set it as output
      - name: Set tag output
        id: set_tag
        run: echo "tag_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      # 9. Build the Docker image
      - name: Build Docker image
        run: |
          TAG=${{ steps.set_tag.outputs.tag_name }}
          docker build -t ghcr.io/manuelentrena/next-movies:$TAG -f docker/Dockerfile.prod .

      # 10. Push the Docker image
      - name: Push Docker image
        run: |
          TAG=${{ steps.set_tag.outputs.tag_name }}
          docker push ghcr.io/manuelentrena/next-movies:$TAG

      # 11. Create Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
